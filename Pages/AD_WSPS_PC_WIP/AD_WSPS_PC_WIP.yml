
params:

  # AD Parameters
  - name: AD_0
    value: 0.4

  - name: AD_shock
    value: 0
    min: -0.3
    max: 0.3
    round: 0.01

  - name: AD_slope
    value: 0.2

  ### WSPS Parameters
  ## WS Parameters
  # Disutility of work a
  - name: WS_a_0
    value: 0.1

  - name: WS_a_shock
    value: 0
    min: -0.1
    max: 0.1
    round: 0.01

  # Unemployment benefits b
  - name: WS_b_0
    value: 0.1

  - name: WS_b_shock
    value: 0
    min: -0.1
    max: 0.1
    round: 0.01

  # Prob of firing given shirking, tau
  - name: WS_tau_0
    value: 0.5

  - name: WS_tau_shock
    value: 0
    min: -0.5
    max: 0.5
    round: 0.05

  ## PS Parameters
  # Market competition - defines markup
  - name: epsilon_0
    value: 1.666667

  - name: epsilon_shock
    value: 0
    min: -0.2
    max: 0.2
    round: 0.01

  # Average product of labour
  - name: q_0
    value: 2

  - name: q_shock
    value: 0
    min: -5
    max: 5
    round: 0.1

  # Cost of imported materials - NB, this takes into account the price level
  - name: umc_0
    value: 0.15

  - name: umc_shock
    value: 0
    min: -0.25
    max: 0.25
    round: 0.05


  ## Others
  - name: L
    value: 1

  # Max y-value on real wage graph, used to calculate labels at the top
  - name: w_max
    value: 1

  - name: show_barg_gap
    value: false
  - name: show_PC
    value: true


  - name: show_test_box
    value: true
  - name: show_short_run
    value: false
  - name: show_long_run
    value: false

calcs:

  # calculate shock values
  WS_intercept: params.WS_intercept_0 + params.WS_intercept_shock
  WS_slope: params.WS_slope_0 + params.WS_slope_shock
  epsilon: params.epsilon_0 + params.epsilon_shock
  q: params.q_0 + params.q_shock
  umc: params.umc_0 + params.umc_shock
  AD: params.AD_0 + params.AD_shock
  WS_a: params.WS_a_0 + params.WS_a_shock
  WS_b: params.WS_b_0 + params.WS_b_shock
  WS_tau: params.WS_tau_0 + params.WS_tau_shock


  # Endogenous variables
  mu_0: (1/params.epsilon_0)
  mu: (1/calcs.epsilon)
  w_offered_0: params.q_0*(1 - calcs.mu_0 - params.umc_0)
  w_offered: calcs.q*(1 - calcs.mu - calcs.umc)


  # Employment outcomes
  # Old eq
  #E_star_0: (params.L*(params.WS_intercept_0 + params.q_0*(calcs.mu_0 + params.umc_0 - 1))) / (params.WS_intercept_0 - params.WS_slope_0 + params.q_0*(calcs.mu_0 + params.umc_0 - 1))

  E_star_0: params.L + (params.WS_a_0) / (params.WS_tau_0*(params.WS_b_0 - calcs.w_offered_0))
  E_star: params.L + (calcs.WS_a) / (calcs.WS_tau*(calcs.WS_b - calcs.w_offered))

  # New eq
  #E_star: (params.L*(calcs.WS_intercept + calcs.q*(calcs.mu + calcs.umc - 1))) / (calcs.WS_intercept - calcs.WS_slope + calcs.q*(calcs.mu + calcs.umc - 1))
  # Short run employment (with AD)
  E_star_SR: calcs.AD / (1-params.AD_slope)


  # BG Stuff: BG Is the vertical distance between the NEW PS and WS curves at the OLD equilibrium employment
  w_demanded: calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L - calcs.E_star_SR))
  barg_gap: (calcs.w_demanded - calcs.w_offered) / calcs.w_offered


  # For the table: expected and realised inflation in each period
  realised_inflation_0: calcs.barg_gap
  
  exp_inflation_1: calcs.realised_inflation_0
  realised_inflation_1: calcs.exp_inflation_1 + calcs.barg_gap

  exp_inflation_2: calcs.realised_inflation_1
  realised_inflation_2: calcs.exp_inflation_2 + calcs.barg_gap


  ### Labels

  ## Explanation: want curve/line labels to not overlap, but this is difficult when gap is small.
  ## Solution: use a step function going from -1->1 as the gap crosses 0, and offset both the old and new labels in opposite directions. This places the labels on opposite sides of their assigned line.
  ## Functioning:
  # 1: calculate the gap
  # 2: use a step function: in this case, a modified logistic curve to make the slope around 0 extremely steep (multiply x by a large number)
  # 3: recalculate label position with this offset


  ## WS Label
  text_WS_x_gap: (params.L - (calcs.WS_a)/(calcs.WS_tau*(params.w_max - calcs.WS_b))) - (params.L - (params.WS_a_0)/(params.WS_tau_0*(params.w_max - params.WS_b_0)))
  text_WS_x_offset: ((2.71828)^(calcs.text_WS_x_gap * (-1000)) + 1)^(-1) * 2 - 1

  text_WS_x_0: params.L - (params.WS_a_0)/(params.WS_tau_0*(params.w_max - params.WS_b_0)) - calcs.text_WS_x_offset * 0.06
  text_WS_x: (params.L - (calcs.WS_a)/(calcs.WS_tau*(params.w_max - calcs.WS_b))) + calcs.text_WS_x_offset * 0.06

  ## PS Label
  text_PS_y_gap: calcs.w_offered - calcs.w_offered_0
  text_PS_y_offset: ((2.71828)^(calcs.text_PS_y_gap * (-1000)) + 1)^(-1) * 2 - 1

  text_PS_y_0: calcs.w_offered_0 - calcs.text_PS_y_offset * 0.05
  text_PS_y: calcs.w_offered + calcs.text_PS_y_offset * 0.05

  ## AD label
  text_AD_y_gap: params.AD_shock
  text_AD_y_offset: ((2.71828)^(calcs.text_AD_y_gap * (-1000)) + 1)^(-1) * 2 - 1

  text_AD_y_0: params.AD_0 + params.AD_slope * 0.9 - calcs.text_AD_y_offset * 0.065
  text_AD_y: calcs.AD + params.AD_slope * 0.9 + calcs.text_AD_y_offset * 0.065


  ## PC Label
  ## Centre the middle two on their lines, push the others out?
  # New PC: at the y-intercept
  text_new_PC_y: (calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L)) - calcs.w_offered) / calcs.w_offered

  # New PC with BG 1: at the y-intercept
  text_new_PC_y_BG1: (calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L)) - calcs.w_offered) / calcs.w_offered + calcs.barg_gap


  # Calculate gap and offset
  new_PC_gap: calcs.text_new_PC_y - calcs.text_new_PC_y_BG1
  text_PC_offset: ((2.71828)^(calcs.new_PC_gap * (-1000)) + 1)^(-1) * 2 - 1

  # Old PC: outside on one side
  text_old_PC_y: (params.WS_b_0 + params.WS_a_0/(params.WS_tau_0*(params.L )) - calcs.w_offered_0) / calcs.w_offered_0 + calcs.text_PC_offset * 0.01

  # New PC with BG 2: opposite side to original
  text_new_PC_y_BG2: (calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L)) - calcs.w_offered) / calcs.w_offered + calcs.barg_gap * 2 - calcs.text_PC_offset * 0.01

layout:
  ThreeHorizontalGraphs:

    ### AD Diagram
    leftGraph:
      xAxis:
        min: 0
        max: params.L
        title: Output, Y
        ticks: 5
      yAxis:
        intercept: 0
        max: params.L
        title: Aggregate Demand, AD
        ticks: 5



      objects:
      ## AD Lines
      # Equilibrium line
      - Line:
          yIntercept: 0
          slope: 1
          color: black

      - AngleMarker:
          measure: 45

      # Normal line
      - Line:
          yIntercept: params.AD_0
          slope: params.AD_slope
          lineStyle: dashed 


      # Shock line
      - Line:
          yIntercept: calcs.AD
          slope: params.AD_slope


      ## Short and long-run equilibria
      # Short run eq point
      - Point:
          coordinates: [calcs.E_star_SR,calcs.E_star_SR]
          color: black
          label: 
            text: "B"
          r: 5
          show: params.show_short_run
          position: br

      # Short run eq dropline
      - Segment:
          a: [calcs.E_star_SR, 0]
          b: [calcs.E_star_SR, calcs.E_star_SR]
          lineStyle: dotted
          color: black
          show: params.show_short_run


      # New eq point (from WSPS)
      - Point:
          coordinates: [calcs.E_star,calcs.E_star]
          color: black
          label: 
            text: "C"
            bgcolor: white
          r: 5
          show: params.show_long_run
          position: br

      # New eq dropline
      - Segment:
          a: [calcs.E_star, 0]
          b: [calcs.E_star, calcs.E_star]
          lineStyle: dotted
          color: black
          show: params.show_long_run

      # Old eq point
      - Point:
          coordinates: [calcs.E_star_0,calcs.E_star_0]
          color: black
          label: 
            text: "A"
            bgcolor: white
          r: 5
          position: br

      # Equilibrium line down
      - Segment:
          a: [calcs.E_star_0, 0]
          b: [calcs.E_star_0, calcs.E_star_0]
          lineStyle: dotted
          color: black


      ## Labels      
      # New AD Label
      - Label:
          coordinates: [0.9, calcs.text_AD_y]
          text: "\\text{AD}_1"
          color: "'#ff7f0e'"
          bgcolor: white

      # Old AD Label
      - Label:
          coordinates: [0.9, calcs.text_AD_y_0]
          text: "\\text{AD}_0"
          color: "'#ff7f0e'"
          bgcolor: white

    leftControls:
      title: Aggregate Demand, demand-side
      sliders:
      - {param: AD_shock, label: "\\text{AD}: C_0"}

      checkboxes:
      - param: show_short_run
        label: "\\text{Show demand-side (short-run) equilibrium}"

    ### WSPS Diagram
    middleGraph:

      xAxis:
        min: 0
        max: params.L
        title: Employment, N
        ticks: 5
      yAxis:
        intercept: 0
        max: params.w_max
        title: Real wage, w
        ticks: 5

      objects:

      ## TESTING SMALL GRAPH
      - Rectangle:
                x1: 0.6
                x2: 1
                y1: 0
                y2: 0.4
                fill: white
                stroke: black
                strokeWidth: 2
                show: params.show_test_box

      # Rescaled WS
      - Curve:
          fn: "(0.4*calcs.WS_b + 0.4*calcs.WS_a/(calcs.WS_tau*(params.L - x*0.6)))"
          min: 0.6
          max: 1
          show: params.show_test_box
          color: "'#eb34c9'"

      # Rescaled PS
      - Curve:
          fn: "0.4*calcs.w_offered"
          min: 0.6
          max: 1
          show: params.show_test_box


      ## BASIC GRAPH OBJECTS
      # Labour Force vertical line
      - Line:
          xIntercept: params.L
          color: "'#005cc8'"


      - Label:
          coordinates: [params.L_graph, 15]
          text: LF
          color: blue
          bgcolor: none

      ## CURVES
      # Original WS Curve
      - Curve:
          fn: "params.WS_b_0 + params.WS_a_0/(params.WS_tau_0(params.L - x))" # arbitrary WS curve but right shape
          color: "'#a8699c'"
          min: 0
          max: params.L
          lineStyle: dashed
    
      # Shock WS Curve
      - Curve:
          fn: "calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L - x))" # arbitrary WS curve but right shape
          color: "'#eb34c9'"
          min: 0
          max: params.L


      # Original PS Curve
      - Line:
          slope: 0
          yIntercept: calcs.w_offered_0
          color: "'#1e1e1e'"
          min: 0
          max: 105
          lineStyle: dashed

      # Shock PS Curve
      - Line:
          slope: 0
          yIntercept: calcs.w_offered
          color: "'#1e1e1e'"
          min: 0
          max: 105



      ## Short and Long-run Equilibria
      # New equilibrium point
      - Point:
          coordinates: [calcs.E_star,calcs.w_offered]
          color: black
          label: 
            text: "C"
            position: br
          show: params.show_long_run
          r: 5

      # New eq dropline
      - Segment:
          a: [calcs.E_star, 0]
          b: [calcs.E_star, calcs.w_offered]
          lineStyle: dotted
          color: black
          show: params.show_long_run


      # Short run AD equilibrium
      - Point:
          coordinates: [calcs.E_star_SR,calcs.w_offered]
          color: black
          label: 
            text: "B"
            position: br
          show: params.show_short_run
          r: 5

      # Short run eq dropline
      - Segment:
          a: [calcs.E_star_SR, 0]
          b: [calcs.E_star_SR, calcs.w_offered]
          lineStyle: dotted
          color: black
          show: params.show_short_run

      # Original equilibrium point
      - Point:
          coordinates: [calcs.E_star_0,calcs.w_offered_0]
          color: black
          label:
            text: "A"
            position: br
          r: 5

      # Old eq dropline
      - Segment:
          a: [calcs.E_star_0, 0]
          b: [calcs.E_star_0, calcs.w_offered_0]
          lineStyle: dotted
          color: black


      # Bargaining gap
      - Segment:
          a: [calcs.E_star_SR, calcs.w_offered]
          b: [calcs.E_star_SR, calcs.w_demanded]
          strokeWidth: 3
          color: red
          show: params.show_barg_gap


      ## Labels
      # New WS Label
      - Label:
          coordinates: [calcs.text_WS_x, 1]
          text: "\\text{WS}_1"
          color: "'#eb34c9'"
          bgcolor: white

      # Old WS Label
      - Label:
          coordinates: [calcs.text_WS_x_0, 1]
          text: "\\text{WS}_0"
          color: "'#eb34c9'"
          bgcolor: white

      # New PS Label
      - Label:
          coordinates: [0.9, calcs.text_PS_y]
          text: "\\text{PS}_1"
          color: black
          bgcolor: white

      # Old PS Label
      - Label:
          coordinates: [0.9, calcs.text_PS_y_0]
          text: "\\text{PS}_0"
          color: black
          bgcolor: white


    middleControls:
      title: Wage and Price Setting, supply-side

      checkboxes:
      - param: show_long_run
        label: "\\text{Show supply-side (long-run) equilibrium}"
      - param: show_test_box
        label: "\\text{Show test box}"

      sliders:
      - {param: q_shock, label: "q"}
      - {param: umc_shock, label: "umc"}
      - {param: epsilon_shock, label: "\\varepsilon"}

      - {param: WS_a_shock, label: "a"}
      - {param: WS_b_shock, label: "b"}
      - {param: WS_tau_shock, label: "\\tau"}



    ### PC Graph
    rightGraph:
      xAxis:
        min: -0.25
        max: params.L
        title: Employment, N
        ticks: 5
      yAxis:
        intercept: 0
        min: -1
        max: 1
        title: Inflation, $\pi\; (\%)$
        ticks: 5


      objects:



      ## OLD PHILLIPS CURVES
      ## New PHILLIPS CURVES
      # New Unstable Phillips Curve 1
      - Curve:
          fn: "(calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L - x)) - calcs.w_offered) / calcs.w_offered + calcs.barg_gap"
          color: "'#eb34c9'"
          min: 0
          max: params.L
          show: params.show_PC

      # New Unstable Phillips Curve 2
      - Curve:
          fn: "(calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L - x)) - calcs.w_offered) / calcs.w_offered + calcs.barg_gap * 2"
          color: "'#ff38a4'"
          min: 0
          max: params.L
          show: params.show_PC

      # New Eq Phillips Curve
      - Curve:
          fn: "(calcs.WS_b + calcs.WS_a/(calcs.WS_tau*(params.L - x)) - calcs.w_offered) / calcs.w_offered" # arbitrary WS curve but right shape
          color: "'#a8699c'"
          min: 0
          max: params.L
          show: show_long_run


      # Old Eq Phillips Curve
      - Curve:
          fn: "(params.WS_b_0 + params.WS_a_0/(params.WS_tau_0*(params.L - x)) - calcs.w_offered_0) / calcs.w_offered_0" # arbitrary WS curve but right shape
          color: "'#a8699c'"
          min: 0
          max: params.L
          lineStyle: dashed


      ## Short and Long-run Equilibria
      # Original equilibrium point
      - Point:
          coordinates: [calcs.E_star_0, 0]
          color: black
          label:
            text: "A"
            position: br
          r: 5


      # New equilibrium point
      - Point:
          coordinates: [calcs.E_star, 0]
          color: black
          label: 
            text: "C"
            position: br
          r: 5
          show: params.show_long_run


      # Short run AD equilibrium
      - Point:
          coordinates: [calcs.E_star_SR,calcs.barg_gap]
          color: black
          label: 
            text: "B"
            position: br
          r: 5
          show: params.show_short_run

      
      # Bargaining gap
      - Segment:
          a: [calcs.E_star_SR, 0]
          b: [calcs.E_star_SR, calcs.barg_gap]
          strokeWidth: 3
          color: red
          show: params.show_barg_gap


      ## Labels for PC Curves
      # New eq PC Curve with BG * 2
      - Label:
          coordinates: [-0.15, calcs.text_new_PC_y_BG2]
          text: "\\text{PC'}_2"
          color: "'#ff38a4'"
          bgcolor: none
          show: params.show_PC

      # New eq PC Curve with BG * 1
      - Label:
          coordinates: [-0.15, calcs.text_new_PC_y_BG1]
          text: "\\text{PC'}_1"
          color: "'#eb34c9'"
          bgcolor: none
          show: params.show_PC

      # New eq PC Curve
      - Label:
          coordinates: [-0.15, calcs.text_new_PC_y]
          text: "\\text{PC'}_0"
          color: "'#a8699c'"
          bgcolor: none

      # Old eq PC Curve
      - Label:
          coordinates: [-0.15, calcs.text_old_PC_y]
          text: "\\text{PC}_0"
          color: "'#a8699c'"
          bgcolor: white


    rightControls:
      title: Phillips Curves, Inflation

      checkboxes:
      - param: show_barg_gap
        label: "\\text{Show Bargaining Gap}"

      divs:
        - html: "`<p>$$
        \\\\text{BG} = \\\\cfrac{w^{WS}-w^{PS}}{w^{PS}}=${(calcs.barg_gap*100).toFixed(2)}\\\\%
        $$</p>`"



        - html: "`
                  <style>
                    table {
                      border-collapse: collapse;
                      width: 50%;
                    }

                    th,
                    td {
                      padding: 8px;
                      text-align: left;
                      border-bottom: 1px solid #ddd;
                    }

                    th {
                      background-color: #f2f2f2;
                    }


                    tr:hover {
                      background-color: #f5f5f5;
                    }
                  </style>

                  <table>
                    <thead>
                      <tr>
                        <th>Period</th>
                        <th>Expected Inflation</th>
                        <th>Realised Inflation</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td>0</td>
                        <td>0.00%</td>
                        <td>${(calcs.realised_inflation_0*100).toFixed(2)}%</td>
                      </tr>
                      <tr>
                        <td>1</td>
                        <td>${(calcs.exp_inflation_1*100).toFixed(2)}%</td>
                        <td>${(calcs.realised_inflation_1*100).toFixed(2)}%</td>
                      </tr>
                      <tr>
                        <td>2</td>
                        <td>${(calcs.exp_inflation_2*100).toFixed(2)}%</td>
                        <td>${(calcs.realised_inflation_2*100).toFixed(2)}%</td>
                      </tr>
                    </tbody>
                  </table>
                  `"