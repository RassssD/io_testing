plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.9
val_GG = 0
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
val_phi = 0.9
val_GG = 0
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, method="lm") +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
val_phi = 0.9
val_GG = 0
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, method="glm") +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, formula = y ~ poly(x, 2)) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, formula = y ~ poly(x, 3)) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, formula = y ~ poly(x, 2)) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, formula = y ~ poly(x, 3, raw=TRUE)) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
val_phi = 0.9
val_GG = 0
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.9
val_GG = 0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0
val_GG = 0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE)#, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE)#, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
val_phi = 0
val_GG = 0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
val_phi = 1
val_GG = 0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
val_phi = 1
val_GG = 0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0
val_GG = 0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.2
val_GG = -0.3
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2, title("Gini and Fair Inequality"))
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
View(df_preload_data)
shiny::runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
shiny::runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
create_app()
create_app = function() {
setwd("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality")
shinylive::export(appdir = "myapp", destdir = "docs")
}
create_app()
setwd("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality")
shinylive::export(appdir = "myapp", destdir = "docs")
setwd("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality")
shinylive::export(appdir = "myapp", destdir = "docs")
install.packages(c("shinylive", "httpuv"))
setwd("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality")
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
