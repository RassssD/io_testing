mutate(ValParam = GG) %>%
select(-c(Phi, GG, Var))
}
# Var is the wanted parameter
if (val_var == -1) {
df_pregen_data_filtered = df_pregen_data %>% filter(GG == val_GG, Phi == val_phi) %>%
mutate(ValParam = Var) %>%
select(-c(Phi, GG, Var))
}
# Draw a number of observations to create fake randomness
# Need to figure this out, but it mostly works
n_max = df_pregen_data_filtered %>% length()
n_select = min(n_max, n_select)
df_pregen_data_sampled = df_pregen_data_filtered[sample(nrow(df_pregen_data_filtered), n_select), ]
return(df_pregen_data_filtered)
}
df_preload_data = read.csv("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp/data/pregen_data.csv")
val_phi = 0.2
val_GG = -0.3
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) #+
#xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) #+
#xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(none()) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank()) +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("% Fair") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, x_title = "Param", y_title = "Gini") {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(x_title) + ylab(y_title) #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, x_title = "Param", y_title = "% Fair") {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(x_title) + ylab(y_title) #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "", y_title = "Gini")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "Phi", y_title = "% Fair")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "", y_title = "")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "GG", y_title = "")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), x_title = "Var", y_title = "")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, x_title = "Param", y_title = "% Fair") {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) +
scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0), breaks=seq(0,100,by=25)) +
xlab(x_title) + ylab(y_title) #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "", y_title = "Gini")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "Phi", y_title = "% Fair")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "", y_title = "")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "GG", y_title = "")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), x_title = "Var", y_title = "")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, x_title = "Param", y_title = "% Fair") {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none",
panel.grid.major = element_line(color = "red",
size = 0.5,
linetype = 2)
) +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) +
scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(x_title) + ylab(y_title) #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "", y_title = "Gini")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "Phi", y_title = "% Fair")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "", y_title = "")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "GG", y_title = "")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), x_title = "Var", y_title = "")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Share Fair
plot_SF = function(df_data, x_title = "Param", y_title = "% Fair") {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none",
panel.grid.major = element_line(color = "grey",
size = 0.5,
linetype = 2)
) +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) +
scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(x_title) + ylab(y_title) #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "", y_title = "Gini")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), x_title = "Phi", y_title = "% Fair")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "", y_title = "")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), x_title = "GG", y_title = "")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), x_title = "Var", y_title = "")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function for plotting the Gini
plot_gini = function(df_data, x_title = "Param", y_title = "Gini") {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
#geom_line(size = 1) +
geom_smooth(size = 1, se=FALSE) + #, formula = y ~ x + x^2 + x^3) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5),
legend.position = "none",
panel.grid.major = element_line(color = "grey",
size = 0.5,
linetype = 2) ) +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(x_title) + ylab(y_title) #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Get the plots, separate from the data generation
gen_plots = function(df_data, val_phi = 0.2, val_GG = -0.3, val_var = 1, n_select = 10) {
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = n_select), x_title = "", y_title = "Gini")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = n_select), x_title = "Phi", y_title = "% Fair")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = n_select), x_title = "", y_title = "")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = n_select), x_title = "GG", y_title = "")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = n_select), "")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = n_select), x_title = "Var", y_title = "")
# all together
#plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid = plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
return(plot_grid)
}
gen_plots(df_preload_data, val_phi = 0, val_GG = 0, val_var = 1)
gen_plots(df_preload_data, val_phi = 0, val_GG = 0.9, val_var = 1)
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
# Get the plots, separate from the data generation
gen_plots = function(df_data, val_phi = 0.2, val_GG = -0.3, val_var = 1, n_select = 10) {
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = n_select), x_title = "", y_title = "Gini")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = n_select), x_title = "Phi", y_title = "% Fair")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = n_select), x_title = "", y_title = "")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = n_select), x_title = "GG", y_title = "")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = n_select), "")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = n_select), x_title = "Var", y_title = "")
# all together
#plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
}
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
?save_plot
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
View(df_preload_data)
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
runApp('C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp')
shinylive::export(appdir = "myapp", destdir = "docs")
install.packages("shinylive")
shinylive::export(appdir = "myapp", destdir = "docs")
getwd()
setwd("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp")
setwd("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality")
shinylive::export(appdir = "myapp", destdir = "docs")
