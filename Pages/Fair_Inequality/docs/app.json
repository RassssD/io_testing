[{"name":"app.R","content":"library(shiny)\r\nlibrary(comprehenr)\r\nlibrary(tidyverse)\r\n\r\n# Define UI for app that draws a histogram ----\r\nui <- fluidPage(\r\n  \r\n  # App title ----\r\n  titlePanel(\"Hello Shiny!\"),\r\n  \r\n  # Sidebar layout with input and output definitions ----\r\n  sidebarLayout(\r\n    \r\n    # Sidebar panel for inputs ----\r\n    sidebarPanel(\r\n      \r\n      # Input: Slider for the number of bins ----\r\n      sliderInput(inputId = \"Delta\",\r\n                  label = \"Delta:\",\r\n                  min = 0,\r\n                  max = 5,\r\n                  value = 0.5,\r\n                  step=0.25),\r\n      sliderInput(inputId = \"n_in_group\",\r\n                  label = \"Number in each group\",\r\n                  min = 1,\r\n                  max = 10,\r\n                  value = 5,\r\n                  step = 2),\r\n      tableOutput(outputId = \"GiniTable\")\r\n      \r\n    ),\r\n    \r\n    # Main panel for displaying outputs ----\r\n    mainPanel(\r\n      \r\n      plotOutput(outputId = \"distPlot\"),\r\n      plotOutput(outputId = \"GiniPlot\")\r\n      \r\n    )\r\n  )\r\n)\r\n\r\n\r\n# Define server logic required to draw a histogram ----\r\nserver <- function(input, output) {\r\n  \r\n\r\n  incomes_df <- reactive({\r\n    n_indivs = input$n_in_group\r\n    \r\n    base_income_woman = 1\r\n    base_income_man = 2*base_income_woman\r\n    \r\n    income_step = input$Delta\r\n    n_indivs_step = floor(n_indivs/2)\r\n    \r\n    incomes_woman = to_vec(for(i in -n_indivs_step:n_indivs_step) max(base_income_woman + income_step * i, 0))\r\n    incomes_man = to_vec(for(i in -n_indivs_step:n_indivs_step) max(base_income_man + 2*income_step * i, 0))\r\n    \r\n    \r\n    group_woman <- to_vec(for(i in 1:n_indivs) \"Woman\")\r\n    group_man <- to_vec(for(i in 1:n_indivs) \"Man\")\r\n    \r\n    \r\n    \r\n    df <- data.frame(c(incomes_man, incomes_woman), c(group_man, group_woman))\r\n    colnames(df) <- c(\"Income\", \"Group\")\r\n    return(df)\r\n  })\r\n  \r\n  \r\n  output$distPlot <- renderPlot({\r\n    \r\n    ##########\r\n    df <- incomes_df()\r\n    hist_max <- ceiling(max(df$Income)/5)*5\r\n    bins <- seq(from=0, to=hist_max, by=1)\r\n    \r\n    ####\r\n    p1 <- hist(subset(df, Group == \"Woman\")$Income, breaks=bins)\r\n    p2 <- hist(subset(df, Group == \"Man\")$Income, breaks=bins)\r\n    \r\n    plot(p1, xlim=c(0,hist_max), ylim=c(0,10), col=rgb(1,0,0,1/4), xlab=\"Income\", ylab=\"Count\")\r\n    plot(p2, xlim=c(0,hist_max), ylim=c(0,10), col=rgb(0,0,1,1/4), add=T, xlab=\"Income\", ylab=\"Count\")\r\n    legend(x = \"topleft\",         # Position\r\n           legend = c(\"Women\", \"Men\"), # Legend texts\r\n           fill = c(2, 4))\r\n    \r\n  })\r\n  \r\n  output$GiniPlot <- renderPlot({\r\n    \r\n    ##########\r\n    df <- incomes_df()\r\n    n_indivs = input$n_in_group\r\n    \r\n    \r\n    df <- df[order(df$Group, df$Income),]\r\n    df <- df %>% group_by(Group) %>% mutate(Cum_Income_Share = cumsum(Income) / sum(Income)) %>% ungroup()\r\n    \r\n    \r\n    df_draw_men <- df %>% filter(Group == \"Man\")\r\n    cum_inc_share_men <- c(0) %>% append(df_draw_men$Cum_Income_Share)\r\n    \r\n    df_draw_women <- df %>% filter(Group == \"Woman\")\r\n    cum_inc_share_women <- c(0) %>% append(df_draw_women$Cum_Income_Share)\r\n    \r\n    df <- df[order(df$Income),]\r\n    df <- df %>% mutate(Cum_Income_Share_All = cumsum(Income) / sum(Income))\r\n    cum_inc_share_all <- c(0) %>% append(df$Cum_Income_Share_All)\r\n    \r\n    \r\n    steps = seq(0, 1, by=1/n_indivs)\r\n    steps_all = seq(0, 1, by=0.5/n_indivs)\r\n    \r\n    \r\n    \r\n    plot(x=steps, y=steps, \r\n         type=\"l\", col=1, lty=2, lwd=2,\r\n         xlab=\"Cumulative Population\", ylab=\"Cumulative Income\",\r\n         xlim = c(0,1), ylim = c(0,1), xaxs=\"i\", yaxs=\"i\")\r\n    lines(x=steps, y=cum_inc_share_women, col=2, type=\"l\", lwd=2)\r\n    lines(x=steps, y=cum_inc_share_men, col=4, type=\"l\", lwd=2)\r\n    lines(x=steps_all, y=cum_inc_share_all, col=1, type=\"l\", lwd=2)\r\n    legend(x = \"topleft\",         # Position\r\n           legend = c(\"Equality\", \"Women\", \"Men\", \"All\"), # Legend texts\r\n           lty = c(2, 1, 1, 1),\r\n           col = c(1, 2, 4, 1),\r\n           lwd = 2)\r\n    \r\n    \r\n  })\r\n  \r\n  output$GiniTable <- renderTable({\r\n    calc_total_gini <- function(dataframe){\r\n      # Get incomes\r\n      incomes = dataframe$Income\r\n      n = length(incomes)\r\n      \r\n      # Need to divide and multiply to divide by the right amount and get the correct mean\r\n      mad = sum(as.numeric(dist(incomes))) / (0.5 * n^2)\r\n      rmad = mad / mean(incomes)\r\n      gini = 0.5 * rmad * n/(n-1)\r\n      \r\n      # Get all possible pairs\r\n      return(gini)\r\n    }\r\n    \r\n    calc_group_gini <- function(dataframe){\r\n      df_gini <- data.frame(matrix(ncol = 2, nrow = 0))\r\n      colnames(df_gini) <- c(\"Group\", \"Gini\")\r\n      \r\n      # Calculate total Gini and add\r\n      total_gini <- calc_total_gini(dataframe)\r\n      df_gini[nrow(df_gini) + 1,] = list(Group = \"All\", Gini = total_gini)\r\n      \r\n      # Iterate over groups\r\n      for(group in unique(dataframe$Group)){\r\n        # Calculate group Gini\r\n        df_group <- df %>% filter(Group == group)\r\n        group_gini <- calc_total_gini(df_group)\r\n        # Add to group\r\n        df_gini[nrow(df_gini) + 1,] = list(Group = group, Gini = group_gini)\r\n      }\r\n      \r\n      \r\n      return(df_gini)\r\n    }\r\n    \r\n    \r\n    df <- incomes_df()\r\n    return(calc_group_gini(df))\r\n    \r\n  })\r\n  \r\n}\r\n\r\n\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n","type":"text"}]
