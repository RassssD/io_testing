plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2, legend)
# Function for plotting the Gini
plot_gini = function(df_data, param) {
step_param = 0.25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$Total) / step_param) * step_param
y_max = 1 # min(ceiling(max(df_data$Total) / step_param) * step_param, 1)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_Gini = mean(Total)) %>%
ggplot(aes(x=ValParam, y = Mean_Gini, color=Group)) +
geom_line(size = 1) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Gini") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# Function for plotting the Share Fair
plot_SF = function(df_data, param) {
step_param = 25
x_min = min(df_data$ValParam)
x_max = max(df_data$ValParam)
y_min = 0 # floor(min(df_data$ShareFair) / step_param) * step_param
y_max = 100 # min(ceiling(max(df_data$ShareFair) / step_param) * step_param, 100)
# Plot
df_data %>% group_by(ValParam, Group) %>% mutate(Mean_SF = mean(ShareFair)) %>%
ggplot(aes(x=ValParam, y = Mean_SF, color=Group)) +
geom_line(size = 1) +
theme_classic() +
theme(title = element_text(size = 15), plot.title = element_text(hjust = 0.5), legend.position = "none") +
scale_color_manual(values=c("black", "blue", "red")) +
scale_x_continuous(limits=c(x_min, x_max), expand = c(0,0)) + scale_y_continuous(limits=c(y_min,y_max), expand = c(0,0)) +
xlab(param) + ylab("Mean Fair Share (%)") #+
#ggtitle(sprintf("Total Inequality, Varying %s", param))
}
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = -0.5, val_var = 1, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = -0.5, val_var = 1, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_var = 1, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_var = 1, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_GG = -0.5, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_GG = -0.5, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = 1, val_var = 1, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_var = 1, n_select = 10), "GG")
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = -0.5, val_var = 0.1, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = -0.5, val_var = 0.1, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = 1, val_var = 1, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_var = 1, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_GG = -0.5, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_GG = -0.5, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = -0.5, val_var = 1, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = -0.5, val_var = 1, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_var = 1, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_var = 1, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_GG = -0.5, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = 0.5, val_GG = -0.5, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.5
val_GG = -0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.5
val_GG = 0.5
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.5
val_GG = 0.5
val_var = 2
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.5
val_GG = 0
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function Version
gen_GG_sims = function(n_indivs = 100, n_samples = 100, list_GG = seq(-100, 100, by=1), mean_man = 10, var_man = 1, var_woman = 1, phi_man = 0.25, phi_woman = 0.25) {
# Storage
df_all = data.frame(matrix(ncol = 7, nrow = 0))
colnames(df_all) <- c("Total_All", "Total_Man", "Total_Woman", "ShareFair_All", "ShareFair_Man", "ShareFair_Woman", "ValParam")
# Loop
for (val_GG in list_GG) {
mean_woman = mean_man + val_GG * mean_man / 100
# Create samples
for (i in 1:n_samples) {
# Create data and calculate Ginis
df <- gen_inc_df(n_indivs, phi_man = phi_man, phi_woman = phi_woman, mean_man = mean_man, mean_woman = mean_woman, var_man = var_man, var_woman = var_woman)
df_gini = calc_sib_groub_gini(df) %>% select(c(Group, Total, ShareFair)) %>% pivot_wider(names_from = Group, values_from = c(Total, ShareFair))
df_gini$ValParam = val_GG
# Add data
df_all <- df_all %>% bind_rows(df_gini)
}
}
# Pivot Longer to get better data format
df_all_long = df_all %>%
pivot_longer(cols = -ValParam,
names_to = c(".value", "Group"),
names_pattern = "(Total|ShareFair)_(All|Man|Woman)")
return(df_all_long)
}
df_test = gen_GG_sims(n_samples=50, phi_man = 0.25, phi_woman = 0.5)
gen_GG_sims = function(n_indivs = 100, n_samples = 100, list_GG = seq(-100, 100, by=10), mean_man = 10, var_man = 1, var_woman = 1, phi_man = 0.25, phi_woman = 0.25) {
# Storage
df_all = data.frame(matrix(ncol = 7, nrow = 0))
colnames(df_all) <- c("Total_All", "Total_Man", "Total_Woman", "ShareFair_All", "ShareFair_Man", "ShareFair_Woman", "ValParam")
# Loop
for (val_GG in list_GG) {
mean_woman = mean_man + val_GG * mean_man / 100
# Create samples
for (i in 1:n_samples) {
# Create data and calculate Ginis
df <- gen_inc_df(n_indivs, phi_man = phi_man, phi_woman = phi_woman, mean_man = mean_man, mean_woman = mean_woman, var_man = var_man, var_woman = var_woman)
df_gini = calc_sib_groub_gini(df) %>% select(c(Group, Total, ShareFair)) %>% pivot_wider(names_from = Group, values_from = c(Total, ShareFair))
df_gini$ValParam = val_GG
# Add data
df_all <- df_all %>% bind_rows(df_gini)
}
}
# Pivot Longer to get better data format
df_all_long = df_all %>%
pivot_longer(cols = -ValParam,
names_to = c(".value", "Group"),
names_pattern = "(Total|ShareFair)_(All|Man|Woman)")
return(df_all_long)
}
df_test = gen_GG_sims(n_samples=50, phi_man = 0.25, phi_woman = 0.5)
gen_GG_sims = function(n_indivs = 100, n_samples = 10, list_GG = seq(-100, 100, by=10), mean_man = 10, var_man = 1, var_woman = 1, phi_man = 0.25, phi_woman = 0.25) {
# Storage
df_all = data.frame(matrix(ncol = 7, nrow = 0))
colnames(df_all) <- c("Total_All", "Total_Man", "Total_Woman", "ShareFair_All", "ShareFair_Man", "ShareFair_Woman", "ValParam")
# Loop
for (val_GG in list_GG) {
mean_woman = mean_man + val_GG * mean_man / 100
# Create samples
for (i in 1:n_samples) {
# Create data and calculate Ginis
df <- gen_inc_df(n_indivs, phi_man = phi_man, phi_woman = phi_woman, mean_man = mean_man, mean_woman = mean_woman, var_man = var_man, var_woman = var_woman)
df_gini = calc_sib_groub_gini(df) %>% select(c(Group, Total, ShareFair)) %>% pivot_wider(names_from = Group, values_from = c(Total, ShareFair))
df_gini$ValParam = val_GG
# Add data
df_all <- df_all %>% bind_rows(df_gini)
}
}
# Pivot Longer to get better data format
df_all_long = df_all %>%
pivot_longer(cols = -ValParam,
names_to = c(".value", "Group"),
names_pattern = "(Total|ShareFair)_(All|Man|Woman)")
return(df_all_long)
}
df_test = gen_GG_sims(n_samples=50, phi_man = 0.25, phi_woman = 0.5)
test = gen_plots(df_test, "Gender Gap (%)")
test[[1]]
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Function to pregenerate the data
gen_preload_inc_data = function(n_samples = 10, n_indivs = 100) {
# List of vars
phi_list = seq(phi_min, phi_max, by=phi_step)
GG_list = seq(GG_min, GG_max, by=GG_step)
var_list = seq(var_min, var_max, by=var_step)
# All combinations
total_combs = length(phi_list) * length(GG_list) * length(var_list)
df_param_combs = expand.grid(phi_list, GG_list, var_list)
colnames(df_param_combs) = c("Phi", "GG", "Var")
df_data = data.frame(matrix(ncol = 10, nrow = 0))
colnames(df_data) <- c("Total_All", "Total_Man", "Total_Woman", "ShareFair_All", "ShareFair_Man", "ShareFair_Woman", "Phi", "GG", "Var", "N_Sim")
# Loop over each combination of values
for (i in 1:total_combs) {
print(sprintf("Iteration %s / %s", i, total_combs))
# Parameters for this iteration
vals = df_param_combs[i, ]
val_phi = vals$Phi
val_GG = vals$GG
val_var = vals$Var
mean_woman = mean_man + val_GG * mean_man
# Create N simulations for each combination
for (n in 1:n_samples) {
# Main data
df <- gen_inc_df(n_indivs, phi_man = val_phi, phi_woman = val_phi, mean_man = mean_man, mean_woman = mean_woman, var_man = val_var, var_woman = val_var)
# Calculate Gini etc
df_gini = calc_sib_groub_gini(df) %>% select(c(Group, Total, ShareFair)) %>% pivot_wider(names_from = Group, values_from = c(Total, ShareFair))
# Add param values
df_gini$Phi = val_phi
df_gini$GG = val_GG
df_gini$Var = val_var
df_gini$N_Sim = n
# Append
df_data <- df_data %>% bind_rows(df_gini)
}
}
df_data_long = df_data %>%
pivot_longer(cols = -c(Phi, GG, Var, N_Sim),
names_to = c(".value", "Group"),
names_pattern = "(Total|ShareFair)_(All|Man|Woman)")
return(df_data_long)
}
# Function to pregenerate the data
gen_preload_inc_data = function(n_samples = 10, n_indivs = 100) {
# List of vars
phi_list = seq(phi_min, phi_max, by=phi_step)
GG_list = seq(GG_min, GG_max, by=GG_step)
var_list = seq(var_min, var_max, by=var_step)
# All combinations
total_combs = length(phi_list) * length(GG_list) * length(var_list)
df_param_combs = expand.grid(phi_list, GG_list, var_list)
colnames(df_param_combs) = c("Phi", "GG", "Var")
df_data = data.frame(matrix(ncol = 10, nrow = 0))
colnames(df_data) <- c("Total_All", "Total_Man", "Total_Woman", "ShareFair_All", "ShareFair_Man", "ShareFair_Woman", "Phi", "GG", "Var", "N_Sim")
# Loop over each combination of values
for (i in 1:total_combs) {
# Parameters for this iteration
vals = df_param_combs[i, ]
val_phi = vals$Phi
val_GG = vals$GG
val_var = vals$Var
mean_woman = mean_man + val_GG * mean_man
# Create N simulations for each combination
for (n in 1:n_samples) {
print(sprintf("Iteration %s / %s", i * n_samples + n, total_combs * n_samples))
# Main data
df <- gen_inc_df(n_indivs, phi_man = val_phi, phi_woman = val_phi, mean_man = mean_man, mean_woman = mean_woman, var_man = val_var, var_woman = val_var)
# Calculate Gini etc
df_gini = calc_sib_groub_gini(df) %>% select(c(Group, Total, ShareFair)) %>% pivot_wider(names_from = Group, values_from = c(Total, ShareFair))
# Add param values
df_gini$Phi = val_phi
df_gini$GG = val_GG
df_gini$Var = val_var
df_gini$N_Sim = n
# Append
df_data <- df_data %>% bind_rows(df_gini)
}
}
df_data_long = df_data %>%
pivot_longer(cols = -c(Phi, GG, Var, N_Sim),
names_to = c(".value", "Group"),
names_pattern = "(Total|ShareFair)_(All|Man|Woman)")
return(df_data_long)
}
df_preload_data = gen_preload_inc_data(n_samples = 10)
val_phi = 0.5
val_GG = 0
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
write.csv(df_preload_data, "C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp/pregen_data.csv")
df_preload_data = read.csv("C:/Programming/GitHub/Wendy-RA/Working/Pages/Fair_Inequality/myapp/pregen_data.csv")
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = 0
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = 0
val_var = 1.5
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = 0
val_var = 0.5
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = 0
val_var = 2
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = 0
val_var = 0.1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = 0
val_var = 1.2
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = 0
val_var = 0.5
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = -0.4
val_var = 0.5
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
val_phi = 0.3
val_GG = -0.2
val_var = 1
# phi
plot_gini_phi = plot_gini(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
plot_SF_phi = plot_SF(select_pregen_inc_data(df_preload_data, val_GG = val_GG, val_var = val_var, n_select = 10), "Phi")
# GG
plot_gini_GG = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
plot_SF_GG = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_var = val_var, n_select = 10), "GG")
# Var
plot_gini_var = plot_gini(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
plot_SF_var = plot_SF(select_pregen_inc_data(df_preload_data, val_phi = val_phi, val_GG = val_GG, n_select = 10), "Var")
# all together
plots = c(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var)
plot_grid(plot_gini_phi, plot_gini_GG, plot_gini_var, plot_SF_phi, plot_SF_GG, plot_SF_var,
ncol=3, nrow=2)
# Sibling Gini for each group
calc_sib_groub_gini <- function(dataframe) {
# Setup table
df_gini <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(df_gini) <- c("Group", "Within_SSS", "Total")
# Need long version of data
dataframe_long <- dataframe %>%
pivot_longer(cols = starts_with("Income"),
names_to = "Sibling",
values_to = "Income")
# Aggregates are easy
all_within_SSS_gini <- calc_sib_gini(dataframe)
all_total_gini <- calc_total_gini(dataframe_long)
# Fill in the All category
df_gini[nrow(df_gini) + 1,] = list(Group = "All", Within_SSS = all_within_SSS_gini, Total = all_total_gini)
# Iterate over groups
for(group in unique(dataframe$Group)){
# Calculate group Gini and sibling gini
df_group <- dataframe %>% filter(Group == group)
group_gini <- calc_total_gini(df_group)
group_sib_gini <- calc_sib_gini(df_group)
# Add to group
df_gini[nrow(df_gini) + 1,] = list(Group = group, Within_SSS = group_sib_gini, Total = group_gini)
}
# Add % fair. If no inequality, say all is fair (since the world is "fair" anyway)
df_gini <- df_gini %>% mutate(
"ShareFair" = round(100 * Within_SSS / Total, 2))
return(df_gini)
}
